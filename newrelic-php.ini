; Setting: newrelic.security.enable
; Type   : boolean
; Scope  : system
; Default: false
; Info   : Indicates if attack detection security module is to be enabled
;
newrelic.security.enable = true

; Setting: newrelic.security.sec_home_path
; Type   : string
; Scope  : system
; Default: "/var/log/newrelic" (default directory for newrelic logs)
; Info   : Home directory for security module. Log directory would be created
;          under the directory given in sec_home_path. Directory name should not
;          contain trailing slash.
;
; newrelic.security.sec_home_path = "/var/log/newrelic"

; Setting: newrelic.security.log_level
; Type   : string
; Scope  : system
; Default: "INFO"
; Info   : Sets the log level of the security module
;
newrelic.security.log_level = "DEBUG"

; Setting: newrelic.security.mode
; Type   : string
; Scope  : system
; Default: "RASP"
; Info   : Security module provides two modes "IAST" or "RASP"
;          See documentation for more details
;
newrelic.security.mode = "RASP"

; Setting: newrelic.security.validator_service_endpoint_url
; Type   : string
; Scope  : system
; Default: none
; Info   : Security module's connection endpoint for validator service
;
newrelic.security.validator_service_endpoint_url = "ws://your_validator_system_ip:54321"

; Setting: newrelic.security.resource_service_endpoint_url
; Type   : string
; Scope  : system
; Default: none
; Info   : Security module's connection endpoint for resource service
;
newrelic.security.resource_service_endpoint_url = "http://your_validator_system_ip:54322"

; Setting: newrelic.security.force_complete_disable
; Type   : boolean
; Scope  : system
; Default: false
; Info   : Used to completely disable security module, this is equivalent to
;          security module not even loaded. If this setting is set to true, security
;          module is completely detached and to enable it, a restart of application is required.
;          This is different than newrelic.security.enabled, in terms that security.enabled decides
;          runtime behaviour of security module but security.force_complete_disable would not even
;          load the security module
;
;newrelic.security.force_complete_disable = false

; Setting: newrelic.security.detection.disable_rci
; Type   : boolean
; Scope  : system
; Default: false
; Info   : Indicates if detection of remote code injection attack category is to be disabled
;
;newrelic.security.detection.disable_rci = false

; Setting: newrelic.security.detection.disable_rxss
; Type   : boolean
; Scope  : system
; Default: false
; Info   : Indicates if detection of reflected xss attack category is to be disabled
;
;newrelic.security.detection.disable_rxss = false

; Setting: newrelic.security.detection.disable_deserialization
; Type   : boolean
; Scope  : system
; Default: false
; Info   : Indicates if detection of deserialization attack category is to be disabled
;
;newrelic.security.detection.disable_deserialization = false

; Following are the settings for overriding the default policy for the security module's mode
; Any of the following policy config will be applicable only when enforce flag is true and policy
; paramter has been overridden

;newrelic.security.policy.enforce = false

;newrelic.security.policy.vulnerability_scan.enabled = false
;newrelic.security.policy.vulnerability_scan.iast_scan.enabled = false
;newrelic.security.policy.vulnerability_scan.iast_scan.probing.interval = 1
;newrelic.security.policy.vulnerability_scan.iast_scan.probing.batch_size = 1

;newrelic.security.policy.protection_mode.enabled = false
;newrelic.security.policy.protection_mode.ip_blocking.enabled = false
;newrelic.security.policy.protection_mode.ip_blocking.attacker_ip_blocking = false
;newrelic.security.policy.protection_mode.ip_blocking.ip_detect_via_xff = false
;newrelic.security.policy.protection_mode.ip_blocking.timeout = 0
;newrelic.security.policy.protection_mode.api_blocking.enabled = false
;newrelic.security.policy.protection_mode.api_blocking.protect_all_apis = false
;newrelic.security.policy.protection_mode.api_blocking.protect_known_vulnerable_apis = false
;newrelic.security.policy.protection_mode.api_blocking.protect_attacked_apis = false
